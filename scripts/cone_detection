import rclpy
from rclpy.node import Node
from sensor_msgs.msg import Image
from cv_bridge import CvBridge
from ultralytics import YOLO

class ConeDetector(Node):
    def __init__(self):
        super().__init__('cone_detector')
        self.bridge = CvBridge()
        self.model = YOLO("runs/detect/train4/weights/best.pt")
        self.sub = self.create_subscription(Image, '/camera/image_raw', self.image_cb, 10)

    def image_cb(self, msg):
        frame = self.bridge.imgmsg_to_cv2(msg, "bgr8")
        results = self.model.predict(frame)
        # TODO: Publish detection results

rclpy.init()
rclpy.spin(ConeDetector())